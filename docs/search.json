[{"path":"http://PecanProject.github.io/fieldactivity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"BSD-3-clause license","title":"BSD-3-clause license","text":"Copyright (c) 2021, fieldactivity authors Redistribution use source binary forms, without modification, permitted provided following conditions met: SOFTWARE PROVIDED COPYRIGHT HOLDERS CONTRIBUTORS “” EXPRESS IMPLIED WARRANTIES, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE DISCLAIMED. EVENT SHALL COPYRIGHT HOLDER CONTRIBUTORS LIABLE DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, LIMITED , PROCUREMENT SUBSTITUTE GOODS SERVICES; LOSS USE, DATA, PROFITS; BUSINESS INTERRUPTION) HOWEVER CAUSED THEORY LIABILITY, WHETHER CONTRACT, STRICT LIABILITY, TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING WAY USE SOFTWARE, EVEN ADVISED POSSIBILITY DAMAGE.","code":"Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  Neither the name of the Finnish Meteorological Institute nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission."},{"path":[]},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"the-root-folder","dir":"Articles","previous_headings":"Files: what is where","what":"The root folder","title":"fieldactivity package for developers","text":"DESCRIPTION, LICENCE, NAMESPACE, LICENSE.md metadata files related R packages","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"dev","dir":"Articles","previous_headings":"Files: what is where","what":"dev","title":"fieldactivity package for developers","text":"Contains files related development app. create: folder (e.g. dev/dev_events) event files development phase. Change call run_app run_dev.R indicate path folder user database (can use create_user_db.R ). indicated run_dev.R 01_start.R, 02_dev.R 03_deploy.R contain useful commands related app development. files created Golem framework. 02_dev.R useful , can used indicate dependencies packages, create new modules etc. run_dev.R script golem::run_dev() runs (note, always use command run app developing ). sets app running developing app. can indicate whether want app run production development mode.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"inst","dir":"Articles","previous_headings":"Files: what is where","what":"inst","title":"fieldactivity package for developers","text":"golem-config.yml configuration file related Golem. Note, don’t change version number hand ; see dev/02_dev.R instead. inst/app/www/script.js javascript file app uses. added head tag app html. mostly related table fileInput modules. inst/user_doc/inst_frontpage file login page use generate text paragraphs.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"instextdata","dir":"Articles","previous_headings":"Files: what is where > inst","what":"inst/extdata","title":"fieldactivity package for developers","text":"folder home three important files.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"ui_structure-json","dir":"Articles","previous_headings":"Files: what is where > inst > inst/extdata","what":"ui_structure.json","title":"fieldactivity package for developers","text":"Contains structure UI element. item file least following fields: code_name name used refer widget app choices: list choices, category display_names.csv \"IGNORE\". See documentation function get_selectInput_choices defined fct_ui.R. multiple: multiple choices allowed? Defaults false. min: smallest acceptable value (inclusive) max: largest acceptable value (inclusive) step: set 1, integer values allowed sum_to, sum_of: related calculation yield sums harvest_crop_table filetype: type files accepeted. See Shiny documentation fileInput widget. necessarily enforced. placeholder: Code name placeholder placeholder: Code name placeholder maxlength: maximum acceptable length (characters) value dynamic: defined, indicates text adjusted execution app. See form_title illustrative () example. style: \"label\" text look like widget label. actionButton dateInput dateRangeInput columns: columns table case dynamic row group rows: list row groups. two types row groups: dynamic static. can one dynamic row group comes first. can multiple static row groups. dynamic row groups row_variable field indicates widget determines rows dynamic row group. static rows variable names desired widgets listed variables hide_labels can used hide labels widgets (labels widgets dynamic row group automatically hidden). name static row can defined name. fields: label: code name label widget (found display_names.csv) required: compulsory fill widget event can saved? Defaults false. hide_in_event_list: variable hidden event list (viewing specific activity type)? Defaults false. condition: isn’t specified single widgets groups widgets. condition (javascript) determines whether widget group question visible . given Shiny element called ConditionalPanel.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"display_names-csv","dir":"Articles","previous_headings":"Files: what is where > inst > inst/extdata","what":"display_names.csv","title":"fieldactivity package for developers","text":"csv file four columns: category, code_name, disp_name_eng disp_name_fin. row translation code name different languages. category can used e.g. point set names choices selectInput widget.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"fosites-csv","dir":"Articles","previous_headings":"Files: what is where > inst > inst/extdata","what":"FOsites.csv","title":"fieldactivity package for developers","text":"csv file contains sites blocks. Note, user names user database match names sites exactly (including case).","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"man-vignettes","dir":"Articles","previous_headings":"Files: what is where","what":"man, vignettes","title":"fieldactivity package for developers","text":"man contains function documentation generated Roxygen2, vignettes contains vignette.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"tests","dir":"Articles","previous_headings":"Files: what is where","what":"tests","title":"fieldactivity package for developers","text":"tests placed tests/testthat. testthat package used. Currently automated test made check changing language works expected, downloading buttons return valid file.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"r","dir":"Articles","previous_headings":"Files: what is where","what":"R","title":"fieldactivity package for developers","text":"folder contains actual bulk application. run_app.R defines function launches app. app_server.R app_ui.R define server UI functions main app. fct_ utils_ files contain helper functions. Files starting mod_ either modules files directly related modules.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"the-structure-of-the-app","dir":"Articles","previous_headings":"","what":"The structure of the app","title":"fieldactivity package for developers","text":"structure app can summarised follows: language site selectors button download user instructions app title introduction text event list includes table showing list events selectors filter events displayed buttons download events zipped json files flat csv buttons create new event clone event contains widgets entering information event save, cancel delete event buttons default widgets (block, activity, date description) hard-coded UI function module. activity-specific widgets created calling create_ui function (defined fct_ui.R) UI function. widgets include standard Shiny widgets well table modules (mod_table.R) fileInput modules (mod_fileInput.R). Modules tool make Shiny apps , well, modular. module includes UI function, creates user interface components, server function defines components behave. module (specifically, server function) can given input values usually reactives (reactive Shiny term. Reactive expressions can thought functions store value recalculate longer valid.). example, language chosen main app passed modules reactive expression – language changed user, reactive can used access latest language modules. Modules can also return values, values usually reactive well. example, form module returns values widgets main app server function, goes edit create json file based information.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"the-startup-process","dir":"Articles","previous_headings":"The structure of the app","what":"The startup process","title":"fieldactivity package for developers","text":"words process starting app, became bit complex recently. app started call run_app function, defined R/run_app.R. app can started two modes, production mode developer mode. controlled option golem.app.prod: run_app.R file app “wrapped shinymanager” display authentication UI app production mode. app starts, app_server server function R\\app_server.R initialised. event list module server initialised well. However, calling server function form module delayed site specified (either logging user account specific site admin mode site selector visible). done decrease time takes main app UI displayed. However, causes small delay loading events event list. form server initialised calling function initialise_form defined within app_server function. Furthermore, form server function initialised, yet initialise server function table fileInput modules form. Instead, initialised first time form shown. initialisation happens sending initialisation signal form reactive (init_signal), listened form server function.","code":"options(golem.app.prod = TRUE) # use production mode and hence user authentication options(golem.app.prod = FALSE) # skip authentication # run_app(...)"},{"path":"http://PecanProject.github.io/fieldactivity/articles/fieldactivity.html","id":"useful-resources","dir":"Articles","previous_headings":"","what":"Useful resources","title":"fieldactivity package for developers","text":"Shiny: Mastering Shiny Shiny function reference R packages: R Packages R package primer R: Advanced R Golem Shiny app development: Engineering Production-Grade Shiny Apps","code":""},{"path":"http://PecanProject.github.io/fieldactivity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Henri Kajasilta. Author, maintainer. Otto Kuusela. Author.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kajasilta H, Kuusela O (2022). fieldactivity: app keeping track field activity. R package version 0.2.1, https://github.com/PecanProject/fieldactivity.","code":"@Manual{,   title = {fieldactivity: An app for keeping track of field activity},   author = {Henri Kajasilta and Otto Kuusela},   year = {2022},   note = {R package version 0.2.1},   url = {https://github.com/PecanProject/fieldactivity}, }"},{"path":"http://PecanProject.github.io/fieldactivity/index.html","id":"r-shiny-app-for-management-data-input","dir":"","previous_headings":"","what":"An app for keeping track of field activity","title":"An app for keeping track of field activity","text":"app keeping track field activity Field Observatory project. Built using Shiny Golem, application allows farmers enter information common farming events like tillage, sowing harvest. event data stored .json files, mostly follow ICASA standards agricultural data.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An app for keeping track of field activity","text":"can install app GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"PecanProject/fieldactivity\")"},{"path":"http://PecanProject.github.io/fieldactivity/index.html","id":"running-the-app","dir":"","previous_headings":"","what":"Running the app","title":"An app for keeping track of field activity","text":"run app, call run_app following arguments define json file directory, user database passphrase user database: Check documentation Shinymanager (user authentication system used app) find create user database. can also use supplied R script dev/create_user_db.R purpose.","code":"options(golem.app.prod = TRUE) # run in production mode to enable user authentication  fieldactivity::run_app(json_file_path = \"~/my_json_file_folder\",                         user_db_path = \"~/my_user_database.sqlite\",                        user_db_passphrase = \"password123\")"},{"path":"http://PecanProject.github.io/fieldactivity/index.html","id":"modifying-the-code","dir":"","previous_headings":"","what":"Modifying the code","title":"An app for keeping track of field activity","text":"modify code, clone repository set working directory R package folder (open RStudio project file fieldactivity.Rproj). now able run app running Modify dev/run_dev.R necessary, file golem::run_dev() runs.","code":"golem::run_dev()"},{"path":"http://PecanProject.github.io/fieldactivity/index.html","id":"additional-resources","dir":"","previous_headings":"","what":"Additional resources","title":"An app for keeping track of field activity","text":"Github pages offer material developers, also regular application users. developers, Get started tab top page, leads vignette files package . reading , developer preliminary idea/conception package logic parts functionality different code sections responsible . However, get better picture application, encouraging test/run package well getting familiar code base. application users, instructions can found via Guide tab (located next Get started). introduced meaningfull features functionalities, user aware using application. instructions written someone using application product mode, .e. signing application registered site using features available non-developers. also encourage users developers fill possible issues feature request : Issues","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/build_structure_lookup_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Build lookup list for UI elements — build_structure_lookup_list","title":"Build lookup list for UI elements — build_structure_lookup_list","text":"Build list names code names UI elements values corresponding element structures (lists) found  ui_structure.json","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/build_structure_lookup_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build lookup list for UI elements — build_structure_lookup_list","text":"","code":"build_structure_lookup_list()"},{"path":"http://PecanProject.github.io/fieldactivity/reference/build_structure_lookup_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build lookup list for UI elements — build_structure_lookup_list","text":"lookup list.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/copy_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a file related to an event and name it appropriately — copy_file","title":"Copy a file related to an event and name it appropriately — copy_file","text":"file (image) uploaded fileInput widget, saved temporary folder. function copies file appropriate directory name. file originally temporary folder, file path ok. Therefore function can also used e.g. cloning event images associated need duplicated.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/copy_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a file related to an event and name it appropriately — copy_file","text":"","code":"copy_file(   orig_filepath,   variable_name,   site,   block,   date,   filepath_is_relative = FALSE,   delete_original = FALSE,   base_folder = json_file_base_folder() )"},{"path":"http://PecanProject.github.io/fieldactivity/reference/copy_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a file related to an event and name it appropriately — copy_file","text":"orig_filepath path file copy variable_name variable file ? E.g. canopeo_image site site event took place block block event took place date day event character string, format must yyyy-mm-dd filepath_is_relative TRUE, json_file_base_folder added beginning filepath delete_original original file deleted copying? base_folder Included testing reasons, default value otherwise used","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/copy_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a file related to an event and name it appropriately — copy_file","text":"path new location file relative events.json   file.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/copy_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy a file related to an event and name it appropriately — copy_file","text":"name format  yyyy-mm-dd_site_block_variable_name_# # number (0, 1, 2, ...) ensure files unique names.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_file_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a folder for a site-block combination — create_file_folder","title":"Create a folder for a site-block combination — create_file_folder","text":"Given site block site, create folder json_file_base_folder events.json file related image files stored. base folder exist, function throw error.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_file_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a folder for a site-block combination — create_file_folder","text":"","code":"create_file_folder(site, block, base_folder = json_file_base_folder())"},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_file_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a folder for a site-block combination — create_file_folder","text":"site site create folder block block create folder base_folder Included testing reasons, default value otherwise used","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_file_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a folder for a site-block combination — create_file_folder","text":"TRUE directory created successfully already exists,   FALSE otherwise.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the UI for a list of elements in the structure file. — create_ui","title":"Generate the UI for a list of elements in the structure file. — create_ui","text":"given list widget structures read ui_structure.json,  create_ui applies create_widget widget list","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the UI for a list of elements in the structure file. — create_ui","text":"","code":"create_ui(widget_structure_list, ns)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the UI for a list of elements in the structure file. — create_ui","text":"widget_structure_list list widget structures (ui_structure.json) generate UI ns namespacing function generated shiny::NS apply id's generated widget","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/create_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the UI for a list of elements in the structure file. — create_ui","text":"list Shiny widgets","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/delete_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a file — delete_file","title":"Delete a file — delete_file","text":"Delete file path filepath. Used delete files (images) associated events, e.g. canopeo_image","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/delete_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a file — delete_file","text":"","code":"delete_file(   filepath,   site = NULL,   block = NULL,   filepath_relative = FALSE,   base_folder = json_file_base_folder() )"},{"path":"http://PecanProject.github.io/fieldactivity/reference/delete_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a file — delete_file","text":"filepath path file deleted. site site event took place block block event took place filepath_relative Set TRUE supply site block filepath relative events.json file. allows function figure correct path file. base_folder Included testing reasons, default value otherwise used","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/evaluate_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","title":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","text":"Takes condition written javascript notation (visibility conditions ui_structure.json) evaluates R.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/evaluate_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","text":"","code":"evaluate_condition(js_condition, session)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/evaluate_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","text":"js_condition javascript condition evaluate string session Current Shiny session evaluate","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/evaluate_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","text":"Returns either TRUE FALSE. condition   evaluated, returns NULL.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/evaluate_condition.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Evalute some javascript conditions from ui_structure.json in R — evaluate_condition","text":"Might best coding practice, works long   js_condition typos. eval(parse(...)) dangerous   used directly user input, case. user   access ui_structure.json file. Running function reactive context create reactive   dependencies. actually useful, know exactly   e.g. relevant variables need recalculated.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/find_event_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the index of an event in a list — find_event_index","title":"Find the index of an event in a list — find_event_index","text":"Find first index corresponding given event list events. event considered equal another exactly variables (though necessarily order) variables exactly values.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/find_event_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the index of an event in a list — find_event_index","text":"","code":"find_event_index(event, event_list)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/find_event_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the index of an event in a list — find_event_index","text":"event event whose index identify event_list list events event found","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/find_event_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the index of an event in a list — find_event_index","text":"index found, NULL otherwise","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_category_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Find code and display names belonging to a given category — get_category_names","title":"Find code and display names belonging to a given category — get_category_names","text":"categories defined display_names.csv file. language undefined, code names returned. language also supplied, corresponding display names set names vector code names.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_category_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find code and display names belonging to a given category — get_category_names","text":"","code":"get_category_names(category, language = NULL)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_category_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find code and display names belonging to a given category — get_category_names","text":"category category (e.g. \"variable_name\") find names language (optional) language display names","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_category_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find code and display names belonging to a given category — get_category_names","text":"vector code names. language supplied, display names   corresponding code names names vector.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn a list of events into a data frame — get_data_table","title":"Turn a list of events into a data frame — get_data_table","text":"Takes list events makes data frame given   variables columns. Also adds column complete event list   final column ordering list date.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn a list of events into a data frame — get_data_table","text":"","code":"get_data_table(events, variable_names)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn a list of events into a data frame — get_data_table","text":"events list events turn data frame variable_names variables displayed columns data frame.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_data_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn a list of events into a data frame — get_data_table","text":"data frame events rows variable names columns.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_data_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Turn a list of events into a data frame — get_data_table","text":"function replace code names display names.   done separately app language switched, can change   table display names without create .","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_disp_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the display names corresponding to given code names — get_disp_name","title":"Get the display names corresponding to given code names — get_disp_name","text":"Get display names corresponding given code names","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_disp_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the display names corresponding to given code names — get_disp_name","text":"","code":"get_disp_name(   code_name,   language = NULL,   is_variable_name = FALSE,   as_names = FALSE )"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_disp_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the display names corresponding to given code names — get_disp_name","text":"code_name vector code names get display names language language (\"disp_name_eng\" \"disp_name_fin\") resulting display names is_variable_name set TRUE, variable names searched display names. FALSE (default), non-variable names searched. as_names display names set names vector code names? Default FALSE.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_disp_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the display names corresponding to given code names — get_disp_name","text":"display name(s) vector character strings   order code names. display name found language   undefined, code name returned. as_names TRUE, display   names names vector code names values.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_disp_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the display names corresponding to given code names — get_disp_name","text":"is_variable_name needed might clashes   variable non-variable code names. E.g. organic_material   option mgmt_operations_event variable. language names   (\"disp_name_eng\" \"disp_name_fin\") correspond names   columns display_names.csv file.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_dynamic_rows_from_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the dynamic rows based on row variable value — get_dynamic_rows_from_value","title":"Determine the dynamic rows based on row variable value — get_dynamic_rows_from_value","text":"used go value variable determining rows dynamic row group rows . row variable selectInput, rows equal value, row variable numericInput, vector rows generated instead","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_dynamic_rows_from_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the dynamic rows based on row variable value — get_dynamic_rows_from_value","text":"","code":"get_dynamic_rows_from_value(variable, value)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_dynamic_rows_from_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the dynamic rows based on row variable value — get_dynamic_rows_from_value","text":"variable name variable functions row variable table value value variable","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_dynamic_rows_from_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the dynamic rows based on row variable value — get_dynamic_rows_from_value","text":"atomic vector rows, either option code names numbers","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_selectInput_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the choices for a selectInput given its code name — get_selectInput_choices","title":"Find the choices for a selectInput given its code name — get_selectInput_choices","text":"Find choices selectInput given code name","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_selectInput_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the choices for a selectInput given its code name — get_selectInput_choices","text":"","code":"get_selectInput_choices(selectInput_code_name, language)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_selectInput_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the choices for a selectInput given its code name — get_selectInput_choices","text":"selectInput_code_name code name selectInput language language show options . passed get_disp_name","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_selectInput_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the choices for a selectInput given its code name — get_selectInput_choices","text":"vector choices (code names). language supplied, names   names vector.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_table_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the variables whose value can be entered through a given table — get_table_variables","title":"Find the variables whose value can be entered through a given table — get_table_variables","text":"Find variables whose value can entered given table","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_table_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the variables whose value can be entered through a given table — get_table_variables","text":"","code":"get_table_variables(table_code_name)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_table_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the variables whose value can be entered through a given table — get_table_variables","text":"table_code_name name table whose variables fetch.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_table_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the variables whose value can be entered through a given table — get_table_variables","text":"vector variable names whose values entered table.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_table_variables.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find the variables whose value can be entered through a given table — get_table_variables","text":"table dynamic row group whose rows determined   input widget's value, widget's variable name returned even   though read list returned table module.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_variable_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the table matching a variable name — get_variable_table","title":"Find the table matching a variable name — get_variable_table","text":"variable's value entered table, return name table","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_variable_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the table matching a variable name — get_variable_table","text":"","code":"get_variable_table(variable_name)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_variable_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the table matching a variable name — get_variable_table","text":"variable_name name variable interest","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/get_variable_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the table matching a variable name — get_variable_table","text":"code name table variable entered, NULL   found.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/mod_event_list_server.html","id":null,"dir":"Reference","previous_headings":"","what":"event_list Server Functions — mod_event_list_server","title":"event_list Server Functions — mod_event_list_server","text":"event_list Server Functions","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/mod_event_list_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"event_list Server Functions — mod_event_list_server","text":"","code":"mod_event_list_server(id, events, language, site)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/mod_event_list_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event_list Server Functions — mod_event_list_server","text":"id id corresponding UI element events reactive expression holding list events display event list language reactive expression holding current UI language site reactive expression holding current site name Update year choices event list filter Adds choices years events recorded Update block choices event list filter Add blocks current site choices Update activity choices event list filter used language changed.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/read_json_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the events from the events.json file — read_json_file","title":"Read the events from the events.json file — read_json_file","text":"Reads events events.json file specific site block combination returns list events.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/read_json_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the events from the events.json file — read_json_file","text":"","code":"read_json_file(site, block, base_folder = json_file_base_folder())"},{"path":"http://PecanProject.github.io/fieldactivity/reference/read_json_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the events from the events.json file — read_json_file","text":"site site read block block read base_folder Included testing reasons, default value otherwise used","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/read_json_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the events from the events.json file — read_json_file","text":"list events, lists. corresponding   file exist events, returns empty list.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/replace_with_display_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace code names with display names in an event data frame — replace_with_display_names","title":"Replace code names with display names in an event data frame — replace_with_display_names","text":"Also replaces missingvals \"\".","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/replace_with_display_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace code names with display names in an event data frame — replace_with_display_names","text":"","code":"replace_with_display_names(events_with_code_names, language)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/replace_with_display_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace code names with display names in an event data frame — replace_with_display_names","text":"events_with_code_names data frame code names turned display names language language display names","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/replace_with_display_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace code names with display names in an event data frame — replace_with_display_names","text":"data frame size entries code names   replaced display names","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/reset_input_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the value of input fields — reset_input_fields","title":"Reset the value of input fields — reset_input_fields","text":"Set specified input fields default empty values.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/reset_input_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the value of input fields — reset_input_fields","text":"","code":"reset_input_fields(session, fields_to_clear, exceptions = c(\"\"))"},{"path":"http://PecanProject.github.io/fieldactivity/reference/reset_input_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the value of input fields — reset_input_fields","text":"session current Shiny session fields_to_clear names variables whose corresponding fields cleared exceptions Optional vector variable names cleared. useful fields_to_clear supplied variable names cleared.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/reset_input_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset the value of input fields — reset_input_fields","text":"None, used side effects.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/reset_input_fields.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reset the value of input fields — reset_input_fields","text":"reset tables (e.g. harvest_crop_table) -- reset    every time become hidden. Also reset fileInputs,   way clearing value.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/rlapply.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively apply function to lists in a list — rlapply","title":"Recursively apply function to lists in a list — rlapply","text":"Recursively apply function elements list lists.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/rlapply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively apply function to lists in a list — rlapply","text":"","code":"rlapply(x, fun, name_fun = NULL, ...)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/rlapply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively apply function to lists in a list — rlapply","text":"x list lists apply function fun function apply lists name_fun Function used name elements returned list. take list argument return name ... arguments pass fun","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/rlapply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively apply function to lists in a list — rlapply","text":"one-level list element value fun returns given list x","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   json_file_path,   user_db_path,   user_db_passphrase,   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"http://PecanProject.github.io/fieldactivity/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"json_file_path Path folder used store generated .json files user_db_path Path Shinymanager user database user_db_passphrase passphrase user database onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts.  See `?golem::get_golem_options` details.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/set_login_language.html","id":null,"dir":"Reference","previous_headings":"","what":"This function sets the labels on the shinymanager login UI — set_login_language","title":"This function sets the labels on the shinymanager login UI — set_login_language","text":"function sets labels shinymanager login UI","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/set_login_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function sets the labels on the shinymanager login UI — set_login_language","text":"","code":"set_login_language(language)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/set_login_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function sets the labels on the shinymanager login UI — set_login_language","text":"language language displayed (either \"disp_name_fin\" disp_name_eng)","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/update_ui_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Update value, label etc. of a UI element. — update_ui_element","title":"Update value, label etc. of a UI element. — update_ui_element","text":"Determines type element updates value using shiny's update   functions.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/update_ui_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update value, label etc. of a UI element. — update_ui_element","text":"","code":"update_ui_element(session, code_name, value = NULL, clear_value = FALSE, ...)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/update_ui_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update value, label etc. of a UI element. — update_ui_element","text":"session Current shiny session code_name code name UI element update value atomic vector holding desired value UI element. NULL, value element altered. clear_value set TRUE, value element cleared (value supplied value ignored) ... Additional arguments (label) pass Shiny's update- functions.","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/valid_dateRangeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the value of a dateRangeInput is valid — valid_dateRangeInput","title":"Check whether the value of a dateRangeInput is valid — valid_dateRangeInput","text":"dates need supplied value considered   valid, start date needs end date","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/valid_dateRangeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the value of a dateRangeInput is valid — valid_dateRangeInput","text":"","code":"valid_dateRangeInput(value)"},{"path":"http://PecanProject.github.io/fieldactivity/reference/valid_dateRangeInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the value of a dateRangeInput is valid — valid_dateRangeInput","text":"value value dataRangeInput validate","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/valid_dateRangeInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the value of a dateRangeInput is valid — valid_dateRangeInput","text":"TRUE value valid, FALSE ","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/write_json_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a given event list to a json file — write_json_file","title":"Write a given event list to a json file — write_json_file","text":"function overwrite current events.json file replace one generated supplied list events","code":""},{"path":"http://PecanProject.github.io/fieldactivity/reference/write_json_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a given event list to a json file — write_json_file","text":"","code":"write_json_file(site, block, event_list, base_folder = json_file_base_folder())"},{"path":"http://PecanProject.github.io/fieldactivity/reference/write_json_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a given event list to a json file — write_json_file","text":"site site events block block events event_list list events write events.json file base_folder Included testing reasons, default value otherwise used","code":""}]
